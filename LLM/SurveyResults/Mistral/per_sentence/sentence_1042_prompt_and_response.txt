We are interested in obtaining botanical trait information about the species Acacia gourmaensis.

We will provide an input text with botanical descriptions,followed by a dictionary where each key 'name' represents a trait name, referring to specific organ or other element of the plant, and is associated to a list with all possible trait values for that trait, ['value_1', 'value_2', ..., 'value_n'].

Input text:
Botany Shrub or small tree up to 4 m tall, bark thick, corky, with thin corky scales, grey to brown, twigs glabrous, yellowish, turning black when bark scales off, lenticellate, crown narrow and open, branchlets with paired, hooked spines, c. 5 mm long.

Initial dictionary of traits with all possible values:
{"Bark": ['Bark peeling in patches', 'Cracked bark'] }

Turn each string s in the list of values in the dictionary into a sublist (s,b), where b is a binary number,either 0 or 1, indicating whether there is strong evidence for value s in the input text. Double check that 'value_i' is reported referring to trait 'name' in the text, and not to a different trait. Always set 'b' to '0' if you are not 100% sure about the association. Do not add new trait values and do not modify the initial ones.Return the dictionary of traits and sublists of (value, evidence) containing ALL POSSIBLE NAMES AND (values, evidence) tuples.

Output only a dictionary in JSON format, no other text at all.



{
"Bark": [
["Bark peeling in patches", 0],
["Cracked bark", 0]
]
}

Note: The input text does not contain strong evidence for 'Bark peeling in patches' or 'Cracked bark'. The bark of Acacia gourmaensis is described as thick, corky, with thin corky scales, grey to brown. However, it is not explicitly stated that the bark is peeling in patches or cracked. Therefore, both 'Bark peeling in patches' and 'Cracked bark' are set to 0 in the output dictionary.