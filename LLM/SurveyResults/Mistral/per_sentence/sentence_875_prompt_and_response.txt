We are interested in obtaining botanical trait information about the species Ficus glumosa.

We will provide an input text with botanical descriptions,followed by a dictionary where each key 'name' represents a trait name, referring to specific organ or other element of the plant, and is associated to a list with all possible trait values for that trait, ['value_1', 'value_2', ..., 'value_n'].

Input text:
Leaves arranged spirally, simple and entire, stipules up to 1.5 cm long, falling off early, petiole up to 8 cm long, blade oblong, broadly elliptical, broadly ovate, obovate or almost circular, 2 to 19 cm, 1 to 13 cm, base cordate or rounded, apex acuminate to subobtuse, glabrous to densely hairy above, densely hairy below, lateral veins in 3 to 7 pairs, tertiary venation reticulate.

Initial dictionary of traits with all possible values:
{"Leaf blade": ['lanceolate blade', 'elliptical blade', 'obovate blade'] }

Turn each string s in the list of values in the dictionary into a sublist (s,b), where b is a binary number,either 0 or 1, indicating whether there is strong evidence for value s in the input text. Double check that 'value_i' is reported referring to trait 'name' in the text, and not to a different trait. Always set 'b' to '0' if you are not 100% sure about the association. Do not add new trait values and do not modify the initial ones.Return the dictionary of traits and sublists of (value, evidence) containing ALL POSSIBLE NAMES AND (values, evidence) tuples.

Output only a dictionary in JSON format, no other text at all.



{
  "Leaf blade": [
    ("lanceolate blade", 0),
    ("elliptical blade", 1),
    ("obovate blade", 1)
  ]
}

Explanation:
The input text mentions the leaf blade being 'oblong, broadly elliptical, broadly ovate, obovate or almost circular'. The initial dictionary of traits only provides three possible values for the leaf blade: 'lanceolate blade', 'elliptical blade', and 'obovate blade'. Among these, 'elliptical blade' and 'obovate blade' match the descriptions in the input text. Since there is strong evidence for these values, their binary numbers are set to 1. The 'lanceolate blade' value is not mentioned in the input text, so its binary number is set to 0.

Note that the 'elliptical blade' and 'obovate blade' values are already present in the initial dictionary, so they are not added as new values. Additionally, the initial values are not modified to match the descriptions in the input text. The output is in JSON format and contains all possible names and (values, evidence) tuples.