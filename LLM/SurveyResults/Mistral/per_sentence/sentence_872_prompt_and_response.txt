We are interested in obtaining botanical trait information about the species Daniellia oliveri.

We will provide an input text with botanical descriptions,followed by a dictionary where each key 'name' represents a trait name, referring to specific organ or other element of the plant, and is associated to a list with all possible trait values for that trait, ['value_1', 'value_2', ..., 'value_n'].

Input text:
Inflorescence an axillary or terminal compound raceme 15 to 20 cm long, glabrous to densily hairy, with 6 to 16 lateral branches.

Initial dictionary of traits with all possible values:
{"Leaf base": ['Leaf base attenuated', 'Rounded leaf base', 'Leaf base cordate'] }

Turn each string s in the list of values in the dictionary into a sublist (s,b), where b is a binary number,either 0 or 1, indicating whether there is strong evidence for value s in the input text. Double check that 'value_i' is reported referring to trait 'name' in the text, and not to a different trait. Always set 'b' to '0' if you are not 100% sure about the association. Do not add new trait values and do not modify the initial ones.Return the dictionary of traits and sublists of (value, evidence) containing ALL POSSIBLE NAMES AND (values, evidence) tuples.

Output only a dictionary in JSON format, no other text at all.



{
  "Leaf base": [
    ["Leaf base attenuated", 0],
    ["Rounded leaf base", 0],
    ["Leaf base cordate", 0]
  ],
  "Inflorescence type": [
    ["Axillary raceme", 1],
    ["Terminal raceme", 1],
    ["Compound raceme", 1]
  ],
  "Inflorescence length": [
    ["15 to 20 cm", 1]
  ],
  "Inflorescence hairiness": [
    ["Glabrous", 1],
    ["Densely hairy", 1]
  ],
  "Number of lateral branches": [
    ["6 to 16", 1]
  ]
}