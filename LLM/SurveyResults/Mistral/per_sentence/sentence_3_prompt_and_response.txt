We are interested in obtaining botanical trait information about the species Strychnos spinosa.

We will provide an input text with botanical descriptions,followed by a dictionary where each key 'name' represents a trait name, referring to specific organ or other element of the plant, and is associated to a list with all possible trait values for that trait, ['value_1', 'value_2', ..., 'value_n'].

Input text:
Leaves elliptic, ovate to almost circular, 1.5-9 x 1.2-7.5 cm, light to dark green and glossy at the base, veins pale green and curving along the margin, apex tapering to rounded, sometimes notched, base tapering, rounded or slightly lobed, margin entire, inclined to be wavy, petiole 2-10 mm long.

Initial dictionary of traits with all possible values:
{"Petiole": ['Petiolated leaf'] }

Turn each string s in the list of values in the dictionary into a sublist (s,b), where b is a binary number,either 0 or 1, indicating whether there is strong evidence for value s in the input text. Double check that 'value_i' is reported referring to trait 'name' in the text, and not to a different trait. Always set 'b' to '0' if you are not 100% sure about the association. Do not add new trait values and do not modify the initial ones.Return the dictionary of traits and sublists of (value, evidence) containing ALL POSSIBLE NAMES AND (values, evidence) tuples.

Output only a dictionary in JSON format, no other text at all.



{
  "Petiole": [
    ["Petiolated leaf", 1]
  ],
  "Leaf shape": [
    ["Elliptic", 1],
    ["Ovate", 1],
    ["Almost circular", 1]
  ],
  "Leaf size": [
    ["1.5-9 x 1.2-7.5 cm", 1]
  ],
  "Leaf color": [
    ["Light to dark green and glossy", 1]
  ],
  "Leaf vein color": [
    ["Pale green", 1]
  ],
  "Leaf apex": [
    ["Tapering to rounded", 1],
    ["Sometimes notched", 1]
  ],
  "Leaf base": [
    ["Tapering", 1],
    ["Rounded", 1],
    ["Slightly lobed", 1]
  ],
  "Leaf margin": [
    ["Entire", 1],
    ["Inclined to be wavy", 1]
  ]
}