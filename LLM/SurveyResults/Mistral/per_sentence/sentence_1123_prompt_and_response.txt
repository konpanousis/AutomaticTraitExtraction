We are interested in obtaining botanical trait information about the species Trema orientalis.

We will provide an input text with botanical descriptions,followed by a dictionary where each key 'name' represents a trait name, referring to specific organ or other element of the plant, and is associated to a list with all possible trait values for that trait, ['value_1', 'value_2', ..., 'value_n'].

Input text:
Leaves: Ovate-lanceolate, acuminate at apex, rounded or obliquely cordate at base, crenate-serrate along the margins, hispid above, white tomentose beneath, petiolate, petioles pubescent, terete ventrally grooved, stipules deciduous.

Initial dictionary of traits with all possible values:
{"Petiole": ['Petiolated leaf'] }

Turn each string s in the list of values in the dictionary into a sublist (s,b), where b is a binary number,either 0 or 1, indicating whether there is strong evidence for value s in the input text. Double check that 'value_i' is reported referring to trait 'name' in the text, and not to a different trait. Always set 'b' to '0' if you are not 100% sure about the association. Do not add new trait values and do not modify the initial ones.Return the dictionary of traits and sublists of (value, evidence) containing ALL POSSIBLE NAMES AND (values, evidence) tuples.

Output only a dictionary in JSON format, no other text at all.



{
  "Petiole": [
    ["Petiolated leaf", 1]
  ],
  "Leaf shape": [
    ["Ovate-lanceolate", 1]
  ],
  "Apex": [
    ["Acuminate", 1]
  ],
  "Base": [
    ["Rounded", 1],
    ["Obliquely cordate", 1]
  ],
  "Margins": [
    ["Crenate-serrate", 1]
  ],
  "Upper surface": [
    ["Hispid", 1]
  ],
  "Lower surface": [
    ["White tomentose", 1]
  ],
  "Stipules": [
    ["Deciduous", 1]
  ]
}